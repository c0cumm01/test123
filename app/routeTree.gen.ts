/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as coreResetPasswordImport } from './routes/(core)/reset-password'
import { Route as coreRegisterImport } from './routes/(core)/register'
import { Route as coreLogoutImport } from './routes/(core)/logout'
import { Route as coreLoginImport } from './routes/(core)/login'
import { Route as coreForgotPasswordImport } from './routes/(core)/forgot-password'
import { Route as coreAuthImport } from './routes/(core)/_auth'
import { Route as coreAdminImport } from './routes/(core)/_admin'
import { Route as coreAcceptInvitationInvitationImport } from './routes/(core)/accept-invitation.$invitation'
import { Route as coreAuthLayoutSettingsImport } from './routes/(core)/_auth/_layout-settings'
import { Route as coreAuthLayoutDefaultImport } from './routes/(core)/_auth/_layout-default'
import { Route as coreAdminLayoutDefaultImport } from './routes/(core)/_admin/_layout-default'
import { Route as coreAuthLayoutDefaultIndexImport } from './routes/(core)/_auth/_layout-default.index'
import { Route as coreAuthLayoutDefaultTestImport } from './routes/(core)/_auth/_layout-default.test'
import { Route as coreAuthLayoutDefaultCreateOrgImport } from './routes/(core)/_auth/_layout-default.create-org'
import { Route as coreAdminLayoutDefaultAdminIndexImport } from './routes/(core)/_admin/_layout-default.admin.index'
import { Route as coreAuthLayoutSettingsOrganizationIdSettingsImport } from './routes/(core)/_auth/_layout-settings.$organizationId.settings'
import { Route as coreAuthLayoutSettingsOrganizationIdMembersImport } from './routes/(core)/_auth/_layout-settings.$organizationId.members'
import { Route as coreAuthLayoutSettingsOrganizationIdInviteImport } from './routes/(core)/_auth/_layout-settings.$organizationId.invite'
import { Route as coreAuthLayoutDefaultDevPagesImport } from './routes/(core)/_auth/_layout-default/dev/pages'
import { Route as coreAdminLayoutDefaultAdminUsersImport } from './routes/(core)/_admin/_layout-default.admin.users'
import { Route as coreAdminLayoutDefaultAdminUserIdUserSessionsImport } from './routes/(core)/_admin/_layout-default.admin.$userId.user-sessions'

// Create Virtual Routes

const coreImport = createFileRoute('/(core)')()

// Create/Update Routes

const coreRoute = coreImport.update({
  id: '/(core)',
  getParentRoute: () => rootRoute,
} as any)

const coreResetPasswordRoute = coreResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => coreRoute,
} as any)

const coreRegisterRoute = coreRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => coreRoute,
} as any)

const coreLogoutRoute = coreLogoutImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => coreRoute,
} as any)

const coreLoginRoute = coreLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => coreRoute,
} as any)

const coreForgotPasswordRoute = coreForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => coreRoute,
} as any)

const coreAuthRoute = coreAuthImport.update({
  id: '/_auth',
  getParentRoute: () => coreRoute,
} as any)

const coreAdminRoute = coreAdminImport.update({
  id: '/_admin',
  getParentRoute: () => coreRoute,
} as any)

const coreAcceptInvitationInvitationRoute =
  coreAcceptInvitationInvitationImport.update({
    id: '/accept-invitation/$invitation',
    path: '/accept-invitation/$invitation',
    getParentRoute: () => coreRoute,
  } as any)

const coreAuthLayoutSettingsRoute = coreAuthLayoutSettingsImport.update({
  id: '/_layout-settings',
  getParentRoute: () => coreAuthRoute,
} as any)

const coreAuthLayoutDefaultRoute = coreAuthLayoutDefaultImport.update({
  id: '/_layout-default',
  getParentRoute: () => coreAuthRoute,
} as any)

const coreAdminLayoutDefaultRoute = coreAdminLayoutDefaultImport.update({
  id: '/_layout-default',
  getParentRoute: () => coreAdminRoute,
} as any)

const coreAuthLayoutDefaultIndexRoute = coreAuthLayoutDefaultIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => coreAuthLayoutDefaultRoute,
  } as any,
)

const coreAuthLayoutDefaultTestRoute = coreAuthLayoutDefaultTestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => coreAuthLayoutDefaultRoute,
} as any)

const coreAuthLayoutDefaultCreateOrgRoute =
  coreAuthLayoutDefaultCreateOrgImport.update({
    id: '/create-org',
    path: '/create-org',
    getParentRoute: () => coreAuthLayoutDefaultRoute,
  } as any)

const coreAdminLayoutDefaultAdminIndexRoute =
  coreAdminLayoutDefaultAdminIndexImport.update({
    id: '/admin/',
    path: '/admin/',
    getParentRoute: () => coreAdminLayoutDefaultRoute,
  } as any)

const coreAuthLayoutSettingsOrganizationIdSettingsRoute =
  coreAuthLayoutSettingsOrganizationIdSettingsImport.update({
    id: '/$organizationId/settings',
    path: '/$organizationId/settings',
    getParentRoute: () => coreAuthLayoutSettingsRoute,
  } as any)

const coreAuthLayoutSettingsOrganizationIdMembersRoute =
  coreAuthLayoutSettingsOrganizationIdMembersImport.update({
    id: '/$organizationId/members',
    path: '/$organizationId/members',
    getParentRoute: () => coreAuthLayoutSettingsRoute,
  } as any)

const coreAuthLayoutSettingsOrganizationIdInviteRoute =
  coreAuthLayoutSettingsOrganizationIdInviteImport.update({
    id: '/$organizationId/invite',
    path: '/$organizationId/invite',
    getParentRoute: () => coreAuthLayoutSettingsRoute,
  } as any)

const coreAuthLayoutDefaultDevPagesRoute =
  coreAuthLayoutDefaultDevPagesImport.update({
    id: '/dev/pages',
    path: '/dev/pages',
    getParentRoute: () => coreAuthLayoutDefaultRoute,
  } as any)

const coreAdminLayoutDefaultAdminUsersRoute =
  coreAdminLayoutDefaultAdminUsersImport.update({
    id: '/admin/users',
    path: '/admin/users',
    getParentRoute: () => coreAdminLayoutDefaultRoute,
  } as any)

const coreAdminLayoutDefaultAdminUserIdUserSessionsRoute =
  coreAdminLayoutDefaultAdminUserIdUserSessionsImport.update({
    id: '/admin/$userId/user-sessions',
    path: '/admin/$userId/user-sessions',
    getParentRoute: () => coreAdminLayoutDefaultRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(core)': {
      id: '/(core)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof coreImport
      parentRoute: typeof rootRoute
    }
    '/(core)/_admin': {
      id: '/(core)/_admin'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof coreAdminImport
      parentRoute: typeof coreRoute
    }
    '/(core)/_auth': {
      id: '/(core)/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof coreAuthImport
      parentRoute: typeof coreImport
    }
    '/(core)/forgot-password': {
      id: '/(core)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof coreForgotPasswordImport
      parentRoute: typeof coreImport
    }
    '/(core)/login': {
      id: '/(core)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof coreLoginImport
      parentRoute: typeof coreImport
    }
    '/(core)/logout': {
      id: '/(core)/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof coreLogoutImport
      parentRoute: typeof coreImport
    }
    '/(core)/register': {
      id: '/(core)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof coreRegisterImport
      parentRoute: typeof coreImport
    }
    '/(core)/reset-password': {
      id: '/(core)/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof coreResetPasswordImport
      parentRoute: typeof coreImport
    }
    '/(core)/_admin/_layout-default': {
      id: '/(core)/_admin/_layout-default'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof coreAdminLayoutDefaultImport
      parentRoute: typeof coreAdminImport
    }
    '/(core)/_auth/_layout-default': {
      id: '/(core)/_auth/_layout-default'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof coreAuthLayoutDefaultImport
      parentRoute: typeof coreAuthImport
    }
    '/(core)/_auth/_layout-settings': {
      id: '/(core)/_auth/_layout-settings'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof coreAuthLayoutSettingsImport
      parentRoute: typeof coreAuthImport
    }
    '/(core)/accept-invitation/$invitation': {
      id: '/(core)/accept-invitation/$invitation'
      path: '/accept-invitation/$invitation'
      fullPath: '/accept-invitation/$invitation'
      preLoaderRoute: typeof coreAcceptInvitationInvitationImport
      parentRoute: typeof coreImport
    }
    '/(core)/_auth/_layout-default/create-org': {
      id: '/(core)/_auth/_layout-default/create-org'
      path: '/create-org'
      fullPath: '/create-org'
      preLoaderRoute: typeof coreAuthLayoutDefaultCreateOrgImport
      parentRoute: typeof coreAuthLayoutDefaultImport
    }
    '/(core)/_auth/_layout-default/test': {
      id: '/(core)/_auth/_layout-default/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof coreAuthLayoutDefaultTestImport
      parentRoute: typeof coreAuthLayoutDefaultImport
    }
    '/(core)/_auth/_layout-default/': {
      id: '/(core)/_auth/_layout-default/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof coreAuthLayoutDefaultIndexImport
      parentRoute: typeof coreAuthLayoutDefaultImport
    }
    '/(core)/_admin/_layout-default/admin/users': {
      id: '/(core)/_admin/_layout-default/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof coreAdminLayoutDefaultAdminUsersImport
      parentRoute: typeof coreAdminLayoutDefaultImport
    }
    '/(core)/_auth/_layout-default/dev/pages': {
      id: '/(core)/_auth/_layout-default/dev/pages'
      path: '/dev/pages'
      fullPath: '/dev/pages'
      preLoaderRoute: typeof coreAuthLayoutDefaultDevPagesImport
      parentRoute: typeof coreAuthLayoutDefaultImport
    }
    '/(core)/_auth/_layout-settings/$organizationId/invite': {
      id: '/(core)/_auth/_layout-settings/$organizationId/invite'
      path: '/$organizationId/invite'
      fullPath: '/$organizationId/invite'
      preLoaderRoute: typeof coreAuthLayoutSettingsOrganizationIdInviteImport
      parentRoute: typeof coreAuthLayoutSettingsImport
    }
    '/(core)/_auth/_layout-settings/$organizationId/members': {
      id: '/(core)/_auth/_layout-settings/$organizationId/members'
      path: '/$organizationId/members'
      fullPath: '/$organizationId/members'
      preLoaderRoute: typeof coreAuthLayoutSettingsOrganizationIdMembersImport
      parentRoute: typeof coreAuthLayoutSettingsImport
    }
    '/(core)/_auth/_layout-settings/$organizationId/settings': {
      id: '/(core)/_auth/_layout-settings/$organizationId/settings'
      path: '/$organizationId/settings'
      fullPath: '/$organizationId/settings'
      preLoaderRoute: typeof coreAuthLayoutSettingsOrganizationIdSettingsImport
      parentRoute: typeof coreAuthLayoutSettingsImport
    }
    '/(core)/_admin/_layout-default/admin/': {
      id: '/(core)/_admin/_layout-default/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof coreAdminLayoutDefaultAdminIndexImport
      parentRoute: typeof coreAdminLayoutDefaultImport
    }
    '/(core)/_admin/_layout-default/admin/$userId/user-sessions': {
      id: '/(core)/_admin/_layout-default/admin/$userId/user-sessions'
      path: '/admin/$userId/user-sessions'
      fullPath: '/admin/$userId/user-sessions'
      preLoaderRoute: typeof coreAdminLayoutDefaultAdminUserIdUserSessionsImport
      parentRoute: typeof coreAdminLayoutDefaultImport
    }
  }
}

// Create and export the route tree

interface coreAdminLayoutDefaultRouteChildren {
  coreAdminLayoutDefaultAdminUsersRoute: typeof coreAdminLayoutDefaultAdminUsersRoute
  coreAdminLayoutDefaultAdminIndexRoute: typeof coreAdminLayoutDefaultAdminIndexRoute
  coreAdminLayoutDefaultAdminUserIdUserSessionsRoute: typeof coreAdminLayoutDefaultAdminUserIdUserSessionsRoute
}

const coreAdminLayoutDefaultRouteChildren: coreAdminLayoutDefaultRouteChildren =
  {
    coreAdminLayoutDefaultAdminUsersRoute:
      coreAdminLayoutDefaultAdminUsersRoute,
    coreAdminLayoutDefaultAdminIndexRoute:
      coreAdminLayoutDefaultAdminIndexRoute,
    coreAdminLayoutDefaultAdminUserIdUserSessionsRoute:
      coreAdminLayoutDefaultAdminUserIdUserSessionsRoute,
  }

const coreAdminLayoutDefaultRouteWithChildren =
  coreAdminLayoutDefaultRoute._addFileChildren(
    coreAdminLayoutDefaultRouteChildren,
  )

interface coreAdminRouteChildren {
  coreAdminLayoutDefaultRoute: typeof coreAdminLayoutDefaultRouteWithChildren
}

const coreAdminRouteChildren: coreAdminRouteChildren = {
  coreAdminLayoutDefaultRoute: coreAdminLayoutDefaultRouteWithChildren,
}

const coreAdminRouteWithChildren = coreAdminRoute._addFileChildren(
  coreAdminRouteChildren,
)

interface coreAuthLayoutDefaultRouteChildren {
  coreAuthLayoutDefaultCreateOrgRoute: typeof coreAuthLayoutDefaultCreateOrgRoute
  coreAuthLayoutDefaultTestRoute: typeof coreAuthLayoutDefaultTestRoute
  coreAuthLayoutDefaultIndexRoute: typeof coreAuthLayoutDefaultIndexRoute
  coreAuthLayoutDefaultDevPagesRoute: typeof coreAuthLayoutDefaultDevPagesRoute
}

const coreAuthLayoutDefaultRouteChildren: coreAuthLayoutDefaultRouteChildren = {
  coreAuthLayoutDefaultCreateOrgRoute: coreAuthLayoutDefaultCreateOrgRoute,
  coreAuthLayoutDefaultTestRoute: coreAuthLayoutDefaultTestRoute,
  coreAuthLayoutDefaultIndexRoute: coreAuthLayoutDefaultIndexRoute,
  coreAuthLayoutDefaultDevPagesRoute: coreAuthLayoutDefaultDevPagesRoute,
}

const coreAuthLayoutDefaultRouteWithChildren =
  coreAuthLayoutDefaultRoute._addFileChildren(
    coreAuthLayoutDefaultRouteChildren,
  )

interface coreAuthLayoutSettingsRouteChildren {
  coreAuthLayoutSettingsOrganizationIdInviteRoute: typeof coreAuthLayoutSettingsOrganizationIdInviteRoute
  coreAuthLayoutSettingsOrganizationIdMembersRoute: typeof coreAuthLayoutSettingsOrganizationIdMembersRoute
  coreAuthLayoutSettingsOrganizationIdSettingsRoute: typeof coreAuthLayoutSettingsOrganizationIdSettingsRoute
}

const coreAuthLayoutSettingsRouteChildren: coreAuthLayoutSettingsRouteChildren =
  {
    coreAuthLayoutSettingsOrganizationIdInviteRoute:
      coreAuthLayoutSettingsOrganizationIdInviteRoute,
    coreAuthLayoutSettingsOrganizationIdMembersRoute:
      coreAuthLayoutSettingsOrganizationIdMembersRoute,
    coreAuthLayoutSettingsOrganizationIdSettingsRoute:
      coreAuthLayoutSettingsOrganizationIdSettingsRoute,
  }

const coreAuthLayoutSettingsRouteWithChildren =
  coreAuthLayoutSettingsRoute._addFileChildren(
    coreAuthLayoutSettingsRouteChildren,
  )

interface coreAuthRouteChildren {
  coreAuthLayoutDefaultRoute: typeof coreAuthLayoutDefaultRouteWithChildren
  coreAuthLayoutSettingsRoute: typeof coreAuthLayoutSettingsRouteWithChildren
}

const coreAuthRouteChildren: coreAuthRouteChildren = {
  coreAuthLayoutDefaultRoute: coreAuthLayoutDefaultRouteWithChildren,
  coreAuthLayoutSettingsRoute: coreAuthLayoutSettingsRouteWithChildren,
}

const coreAuthRouteWithChildren = coreAuthRoute._addFileChildren(
  coreAuthRouteChildren,
)

interface coreRouteChildren {
  coreAdminRoute: typeof coreAdminRouteWithChildren
  coreAuthRoute: typeof coreAuthRouteWithChildren
  coreForgotPasswordRoute: typeof coreForgotPasswordRoute
  coreLoginRoute: typeof coreLoginRoute
  coreLogoutRoute: typeof coreLogoutRoute
  coreRegisterRoute: typeof coreRegisterRoute
  coreResetPasswordRoute: typeof coreResetPasswordRoute
  coreAcceptInvitationInvitationRoute: typeof coreAcceptInvitationInvitationRoute
}

const coreRouteChildren: coreRouteChildren = {
  coreAdminRoute: coreAdminRouteWithChildren,
  coreAuthRoute: coreAuthRouteWithChildren,
  coreForgotPasswordRoute: coreForgotPasswordRoute,
  coreLoginRoute: coreLoginRoute,
  coreLogoutRoute: coreLogoutRoute,
  coreRegisterRoute: coreRegisterRoute,
  coreResetPasswordRoute: coreResetPasswordRoute,
  coreAcceptInvitationInvitationRoute: coreAcceptInvitationInvitationRoute,
}

const coreRouteWithChildren = coreRoute._addFileChildren(coreRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof coreAuthLayoutDefaultIndexRoute
  '': typeof coreAuthLayoutSettingsRouteWithChildren
  '/forgot-password': typeof coreForgotPasswordRoute
  '/login': typeof coreLoginRoute
  '/logout': typeof coreLogoutRoute
  '/register': typeof coreRegisterRoute
  '/reset-password': typeof coreResetPasswordRoute
  '/accept-invitation/$invitation': typeof coreAcceptInvitationInvitationRoute
  '/create-org': typeof coreAuthLayoutDefaultCreateOrgRoute
  '/test': typeof coreAuthLayoutDefaultTestRoute
  '/admin/users': typeof coreAdminLayoutDefaultAdminUsersRoute
  '/dev/pages': typeof coreAuthLayoutDefaultDevPagesRoute
  '/$organizationId/invite': typeof coreAuthLayoutSettingsOrganizationIdInviteRoute
  '/$organizationId/members': typeof coreAuthLayoutSettingsOrganizationIdMembersRoute
  '/$organizationId/settings': typeof coreAuthLayoutSettingsOrganizationIdSettingsRoute
  '/admin': typeof coreAdminLayoutDefaultAdminIndexRoute
  '/admin/$userId/user-sessions': typeof coreAdminLayoutDefaultAdminUserIdUserSessionsRoute
}

export interface FileRoutesByTo {
  '/': typeof coreAuthLayoutDefaultIndexRoute
  '': typeof coreAuthLayoutSettingsRouteWithChildren
  '/forgot-password': typeof coreForgotPasswordRoute
  '/login': typeof coreLoginRoute
  '/logout': typeof coreLogoutRoute
  '/register': typeof coreRegisterRoute
  '/reset-password': typeof coreResetPasswordRoute
  '/accept-invitation/$invitation': typeof coreAcceptInvitationInvitationRoute
  '/create-org': typeof coreAuthLayoutDefaultCreateOrgRoute
  '/test': typeof coreAuthLayoutDefaultTestRoute
  '/admin/users': typeof coreAdminLayoutDefaultAdminUsersRoute
  '/dev/pages': typeof coreAuthLayoutDefaultDevPagesRoute
  '/$organizationId/invite': typeof coreAuthLayoutSettingsOrganizationIdInviteRoute
  '/$organizationId/members': typeof coreAuthLayoutSettingsOrganizationIdMembersRoute
  '/$organizationId/settings': typeof coreAuthLayoutSettingsOrganizationIdSettingsRoute
  '/admin': typeof coreAdminLayoutDefaultAdminIndexRoute
  '/admin/$userId/user-sessions': typeof coreAdminLayoutDefaultAdminUserIdUserSessionsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(core)': typeof coreRouteWithChildren
  '/(core)/_admin': typeof coreAdminRouteWithChildren
  '/(core)/_auth': typeof coreAuthRouteWithChildren
  '/(core)/forgot-password': typeof coreForgotPasswordRoute
  '/(core)/login': typeof coreLoginRoute
  '/(core)/logout': typeof coreLogoutRoute
  '/(core)/register': typeof coreRegisterRoute
  '/(core)/reset-password': typeof coreResetPasswordRoute
  '/(core)/_admin/_layout-default': typeof coreAdminLayoutDefaultRouteWithChildren
  '/(core)/_auth/_layout-default': typeof coreAuthLayoutDefaultRouteWithChildren
  '/(core)/_auth/_layout-settings': typeof coreAuthLayoutSettingsRouteWithChildren
  '/(core)/accept-invitation/$invitation': typeof coreAcceptInvitationInvitationRoute
  '/(core)/_auth/_layout-default/create-org': typeof coreAuthLayoutDefaultCreateOrgRoute
  '/(core)/_auth/_layout-default/test': typeof coreAuthLayoutDefaultTestRoute
  '/(core)/_auth/_layout-default/': typeof coreAuthLayoutDefaultIndexRoute
  '/(core)/_admin/_layout-default/admin/users': typeof coreAdminLayoutDefaultAdminUsersRoute
  '/(core)/_auth/_layout-default/dev/pages': typeof coreAuthLayoutDefaultDevPagesRoute
  '/(core)/_auth/_layout-settings/$organizationId/invite': typeof coreAuthLayoutSettingsOrganizationIdInviteRoute
  '/(core)/_auth/_layout-settings/$organizationId/members': typeof coreAuthLayoutSettingsOrganizationIdMembersRoute
  '/(core)/_auth/_layout-settings/$organizationId/settings': typeof coreAuthLayoutSettingsOrganizationIdSettingsRoute
  '/(core)/_admin/_layout-default/admin/': typeof coreAdminLayoutDefaultAdminIndexRoute
  '/(core)/_admin/_layout-default/admin/$userId/user-sessions': typeof coreAdminLayoutDefaultAdminUserIdUserSessionsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/forgot-password'
    | '/login'
    | '/logout'
    | '/register'
    | '/reset-password'
    | '/accept-invitation/$invitation'
    | '/create-org'
    | '/test'
    | '/admin/users'
    | '/dev/pages'
    | '/$organizationId/invite'
    | '/$organizationId/members'
    | '/$organizationId/settings'
    | '/admin'
    | '/admin/$userId/user-sessions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/forgot-password'
    | '/login'
    | '/logout'
    | '/register'
    | '/reset-password'
    | '/accept-invitation/$invitation'
    | '/create-org'
    | '/test'
    | '/admin/users'
    | '/dev/pages'
    | '/$organizationId/invite'
    | '/$organizationId/members'
    | '/$organizationId/settings'
    | '/admin'
    | '/admin/$userId/user-sessions'
  id:
    | '__root__'
    | '/(core)'
    | '/(core)/_admin'
    | '/(core)/_auth'
    | '/(core)/forgot-password'
    | '/(core)/login'
    | '/(core)/logout'
    | '/(core)/register'
    | '/(core)/reset-password'
    | '/(core)/_admin/_layout-default'
    | '/(core)/_auth/_layout-default'
    | '/(core)/_auth/_layout-settings'
    | '/(core)/accept-invitation/$invitation'
    | '/(core)/_auth/_layout-default/create-org'
    | '/(core)/_auth/_layout-default/test'
    | '/(core)/_auth/_layout-default/'
    | '/(core)/_admin/_layout-default/admin/users'
    | '/(core)/_auth/_layout-default/dev/pages'
    | '/(core)/_auth/_layout-settings/$organizationId/invite'
    | '/(core)/_auth/_layout-settings/$organizationId/members'
    | '/(core)/_auth/_layout-settings/$organizationId/settings'
    | '/(core)/_admin/_layout-default/admin/'
    | '/(core)/_admin/_layout-default/admin/$userId/user-sessions'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  coreRoute: typeof coreRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  coreRoute: coreRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(core)"
      ]
    },
    "/(core)": {
      "filePath": "(core)",
      "children": [
        "/(core)/_admin",
        "/(core)/_auth",
        "/(core)/forgot-password",
        "/(core)/login",
        "/(core)/logout",
        "/(core)/register",
        "/(core)/reset-password",
        "/(core)/accept-invitation/$invitation"
      ]
    },
    "/(core)/_admin": {
      "filePath": "(core)/_admin.tsx",
      "parent": "/(core)",
      "children": [
        "/(core)/_admin/_layout-default"
      ]
    },
    "/(core)/_auth": {
      "filePath": "(core)/_auth.tsx",
      "parent": "/(core)",
      "children": [
        "/(core)/_auth/_layout-default",
        "/(core)/_auth/_layout-settings"
      ]
    },
    "/(core)/forgot-password": {
      "filePath": "(core)/forgot-password.tsx",
      "parent": "/(core)"
    },
    "/(core)/login": {
      "filePath": "(core)/login.tsx",
      "parent": "/(core)"
    },
    "/(core)/logout": {
      "filePath": "(core)/logout.tsx",
      "parent": "/(core)"
    },
    "/(core)/register": {
      "filePath": "(core)/register.tsx",
      "parent": "/(core)"
    },
    "/(core)/reset-password": {
      "filePath": "(core)/reset-password.tsx",
      "parent": "/(core)"
    },
    "/(core)/_admin/_layout-default": {
      "filePath": "(core)/_admin/_layout-default.tsx",
      "parent": "/(core)/_admin",
      "children": [
        "/(core)/_admin/_layout-default/admin/users",
        "/(core)/_admin/_layout-default/admin/",
        "/(core)/_admin/_layout-default/admin/$userId/user-sessions"
      ]
    },
    "/(core)/_auth/_layout-default": {
      "filePath": "(core)/_auth/_layout-default.tsx",
      "parent": "/(core)/_auth",
      "children": [
        "/(core)/_auth/_layout-default/create-org",
        "/(core)/_auth/_layout-default/test",
        "/(core)/_auth/_layout-default/",
        "/(core)/_auth/_layout-default/dev/pages"
      ]
    },
    "/(core)/_auth/_layout-settings": {
      "filePath": "(core)/_auth/_layout-settings.tsx",
      "parent": "/(core)/_auth",
      "children": [
        "/(core)/_auth/_layout-settings/$organizationId/invite",
        "/(core)/_auth/_layout-settings/$organizationId/members",
        "/(core)/_auth/_layout-settings/$organizationId/settings"
      ]
    },
    "/(core)/accept-invitation/$invitation": {
      "filePath": "(core)/accept-invitation.$invitation.tsx",
      "parent": "/(core)"
    },
    "/(core)/_auth/_layout-default/create-org": {
      "filePath": "(core)/_auth/_layout-default.create-org.tsx",
      "parent": "/(core)/_auth/_layout-default"
    },
    "/(core)/_auth/_layout-default/test": {
      "filePath": "(core)/_auth/_layout-default.test.tsx",
      "parent": "/(core)/_auth/_layout-default"
    },
    "/(core)/_auth/_layout-default/": {
      "filePath": "(core)/_auth/_layout-default.index.tsx",
      "parent": "/(core)/_auth/_layout-default"
    },
    "/(core)/_admin/_layout-default/admin/users": {
      "filePath": "(core)/_admin/_layout-default.admin.users.tsx",
      "parent": "/(core)/_admin/_layout-default"
    },
    "/(core)/_auth/_layout-default/dev/pages": {
      "filePath": "(core)/_auth/_layout-default/dev/pages.tsx",
      "parent": "/(core)/_auth/_layout-default"
    },
    "/(core)/_auth/_layout-settings/$organizationId/invite": {
      "filePath": "(core)/_auth/_layout-settings.$organizationId.invite.tsx",
      "parent": "/(core)/_auth/_layout-settings"
    },
    "/(core)/_auth/_layout-settings/$organizationId/members": {
      "filePath": "(core)/_auth/_layout-settings.$organizationId.members.tsx",
      "parent": "/(core)/_auth/_layout-settings"
    },
    "/(core)/_auth/_layout-settings/$organizationId/settings": {
      "filePath": "(core)/_auth/_layout-settings.$organizationId.settings.tsx",
      "parent": "/(core)/_auth/_layout-settings"
    },
    "/(core)/_admin/_layout-default/admin/": {
      "filePath": "(core)/_admin/_layout-default.admin.index.tsx",
      "parent": "/(core)/_admin/_layout-default"
    },
    "/(core)/_admin/_layout-default/admin/$userId/user-sessions": {
      "filePath": "(core)/_admin/_layout-default.admin.$userId.user-sessions.tsx",
      "parent": "/(core)/_admin/_layout-default"
    }
  }
}
ROUTE_MANIFEST_END */
